spring:
  application:
    name: tw-tkms-test
  datasource:
    url: "jdbc:mariadb://localhost:${MARIADB_TCP_3306}/tkms"
    password: "example-password-change-me"
    username: "root"
    hikari:
      validation-timeout: 5000
      maximum-pool-size: 50
      minimum-idle: 0
      transaction-isolation: 2

  kafka:
    bootstrap-servers: "localhost:${KAFKA_TCP_9092}"
    consumer:
      group-id: ${spring.application.name}
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    listener:
      missing-topics-fatal: false

  flyway:
    locations: "classpath:db/migration/mysql"

tw-curator:
  zookeeper-connect-string: "localhost:${ZOOKEEPER_TCP_2181}"

tw-tkms:
  polling-interval: 5ms
  shards-count: 2
  insert-batch-size: 2
  kafka:
    bootstrap.servers: "localhost:${KAFKA_TCP_9092}"
  shards:
    1:
      polling-interval: 6ms
      kafka:
        linger:
          ms: 7
  debug-enabled: true
  compression:
    algorithm: random
    min-size: 10

tw-graceful-shutdown:
  clients-reaction-time-ms: 1000
  strategies-check-interval-time-ms: 1000

logging.level.org.apache.kafka.clients: WARN

tw-tkms-test:
  test-topic: TestTopic
---

spring:
  profiles: postgres
  application.name: tw-tkms-test-postgres
  datasource:
    url: "jdbc:postgresql://localhost:${POSTGRES_TCP_5432}/postgres"
    username: "postgres"
  flyway:
    locations: "classpath:db/migration/postgres"

tw-tkms:
  database-dialect: POSTGRES
tw-tkms-test:
  test-topic: TestTopicPostgres
